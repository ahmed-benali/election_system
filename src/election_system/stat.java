/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package election_system;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ahmed
 */
public class stat extends javax.swing.JFrame {

    /**
     * Creates new form stat
     */
    Connection con;
    Statement stmt;
    PreparedStatement pstmt;
    public stat() {
        initComponents();
        connect_base();
        create_barchart();
        create_piechart();
   
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pie_panel = new javax.swing.JPanel();
        chart_panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("statistical results");

        jPanel1.setBackground(new java.awt.Color(41, 241, 195));

        pie_panel.setLayout(new javax.swing.BoxLayout(pie_panel, javax.swing.BoxLayout.LINE_AXIS));

        chart_panel.setLayout(new javax.swing.BoxLayout(chart_panel, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(chart_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                .addGap(36, 36, 36)
                .addComponent(pie_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pie_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(chart_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new stat().setVisible(true);
            }
        });
    }
    public void create_barchart(){
        connect_base();
        int vote ,id;
        Statement stmt1;
        ResultSet rs1;
    DefaultCategoryDataset ded=new DefaultCategoryDataset();
    try{
        
        String sql2="select * from candidate";
        stmt=con.createStatement();
        ResultSet rs2=stmt.executeQuery(sql2);
                String sql1="select * from votes";
                stmt1=con.createStatement();
                rs1=stmt1.executeQuery(sql1);
               

            while(rs2.next()){
                id=rs2.getInt("id");
                vote=0;
                
                while(rs1.next()){
                if(rs1.getInt("id")==id){
                    vote=vote+1;}
                }
                ded.setValue(vote, "votes", Integer.toString(id));
                rs1=stmt1.executeQuery(sql1);
            }
                
    }
                catch(SQLException err) 
                {
                    System.out.println(err.getMessage());
                } 


    JFreeChart jchart =ChartFactory.createBarChart("voting results", "candidate", "votes", ded, PlotOrientation.VERTICAL, true, true, true);
    CategoryPlot plot =jchart.getCategoryPlot();
    plot.setRangeGridlinePaint(Color.black);
    //ChartFrame frame= new ChartFrame("vote_record",jchart,true);
    //frame.setVisible(false);
    //frame.setSize(500, 400);
    ChartPanel jchartpanel=new ChartPanel (jchart);
    chart_panel.removeAll();
    chart_panel.add(jchartpanel);
    chart_panel.updateUI();
    
}
    
    public void create_piechart(){
        int yes = 0,no = 0;
        boolean stat = false;
        connect_base();
        DefaultPieDataset ded=new DefaultPieDataset();
        try{
                String sql1=("select count(id) from users where vote="+false);
                stmt=con.createStatement();
                ResultSet rs1=stmt.executeQuery(sql1);
                String sql2=("select count(id) from users where vote="+true);
                stmt=con.createStatement();
                ResultSet rs2=stmt.executeQuery(sql2);     
                
        while(rs1.next()){    
        no=rs1.getInt(1);}
        while(rs2.next()){    
        yes=rs2.getInt(1);}
        
        ded.setValue("voted",yes);
         
        ded.setValue("didnt vote", no);
        
        }
                        catch(SQLException err) 
                {
                    System.out.println(err.getMessage());
                } 
        JFreeChart jchart=ChartFactory.createPieChart("Voting percentage", ded);
        
        ChartPanel jchartpanel=new ChartPanel (jchart);
        pie_panel.removeAll();
        pie_panel.add(jchartpanel);
        pie_panel.updateUI();
    }
    public void connect_base(){
        try{
        String host = "jdbc:derby://localhost:1527/samp";
        String username = "db";
        String password = "db";
        con =  DriverManager.getConnection(host,username,password);
        stmt = con.createStatement( );
        }
         catch(SQLException err) 
                {
                    System.out.println(err.getMessage());
                }        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chart_panel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pie_panel;
    // End of variables declaration//GEN-END:variables
}
